{"version":3,"file":"static/js/241.04cffefa.chunk.js","mappings":"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","sources":["components/pages/SignUp/SignUp.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { signUpThunk } from \"components/redux/thunks\";\nimport { Button, Container, FormControl, FormErrorMessage, FormHelperText, FormLabel, Input } from \"@chakra-ui/react\";\nimport { Formik, Field, Form } from 'formik';\nimport * as yup from 'yup';\n\n\nconst SignUpPattern = yup.object({\n  name: yup.string().required('Required'),\n  email: yup.string().required('Required'),\n  password: yup.string().required('Required').min(7),\n});\n\nconst SignUp = () => {\n    const dispatch = useDispatch()\n   \n    const submitForm = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      signUpThunk({\n        name,\n        email,\n        password,\n      })\n    );\n  };\n\n    return (\n      <Container m='auto'>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={submitForm}\n        validationSchema={SignUpPattern}\n      >\n        <Form>\n          <Field name=\"name\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\n                <FormLabel htmlFor=\"nameSignUp\" ml=\"3\">Username* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"nameSignUp\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"email\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.email && form.touched.email}>\n                <FormLabel htmlFor=\"emailSignUp\" ml={3} mt={4}>Email* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"emailSignUp\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                  <FormHelperText fontSize='xs' ml={4}>We'll never share your email.</FormHelperText>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"password\">\n            {({ field, form }) => (\n              <FormControl\n                isInvalid={form.errors.password && form.touched.password}\n              >\n                <FormLabel htmlFor=\"passwordSignUp\" ml={3} mt={4}>Password* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"passwordSignUp\"\n                  type=\"password\"\n                  pattern=\".{7,}\"\n                  title=\"Password must be at least 7 characters long\"\n                  placeholder=\"Password\"\n                  required\n                />\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                  <FormHelperText fontSize='xs' ml={4}>We'll never share your password.</FormHelperText>\n              </FormControl>\n            )}\n          </Field>\n\n          <Button type=\"submit\" size=\"md\" mt={5} colorScheme=\"yellow\">\n            Sign up\n          </Button>\n        </Form>\n      </Formik>\n    </Container>\n    )\n    \n}\n\nexport default SignUp\n\n\n\n\n"],"names":["SignUpPattern","yup","name","required","email","password","min","dispatch","useDispatch","_jsx","Container","m","children","Formik","initialValues","onSubmit","_ref","_ref2","resetForm","signUpThunk","validationSchema","_jsxs","Form","Field","_ref3","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","ml","Input","_objectSpread","id","type","placeholder","FormErrorMessage","_ref4","mt","FormHelperText","fontSize","_ref5","pattern","title","Button","size","colorScheme"],"sourceRoot":""}